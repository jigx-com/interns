title: =@ctx.jig.inputs.photoTitle
description: =@ctx.jig.inputs.description
type: jig.default

datasources:
  commentData: 
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_DYNAMIC
      entities:
        - default/testComment
        - default/testMembers
      query: |
        SELECT
          tC.id AS testCommentID,
          json_extract(tM.data, '$.avatar') AS avatar,
          json_extract(tM.data, '$.firstName') AS firstName,
          json_extract(tM.data, '$.lastName') AS lastName,
          json_extract(tC.data, '$.comment') AS comment,
          json_extract(tC.data, '$.reactions') AS reactions
        FROM 
          [default/testComment] AS tC LEFT JOIN [default/testMembers] AS tM
        ON json_extract(tC.data, '$.commenterEmail') = json_extract(tM.data, '$.email')
        WHERE json_extract(tC.data, '$.photoId') = @sort
        ORDER BY reactions DESC
      queryParameters:
        sort: =@ctx.jig.inputs.photoId
  
  currentUser:
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_DYNAMIC
      entities:
        - default/table-name
      query: |
          SELECT 
            id
          FROM [default/testMembers] 
          WHERE '$.email' LIKE @currentUser
      queryParameters:
        currentUser: =@ctx.user.email


actions:
  - children:
      # Submitting Comment
      - type: action.submit-form
        options:
          formId: photoComment
          provider: DATA_PROVIDER_DYNAMIC
          title: Comment
          entity: default/testComment
          method: create
          goBack: stay
          onSuccess:
            actions:
              - type: action.confirm
                options:
                  title: Commented
                  isConfirmedAutomatically: true
                  onConfirmed:
                    type: action.go-back
                  modal:
                    title: ""
      # Voting for Photo
      - type: action.execute-entity
        options:
          title: Vote for this image!
          provider: DATA_PROVIDER_DYNAMIC
          entity: default/testMembers
          method: update
          goBack: stay
          icon: checklist #vote [ballot/ballot-box]
          data:
            id: =@ctx.datasources.currentUser.id
            dailyVote: =@ctx.jig.inputs.photoId
          onSuccess: 
            type: action.confirm
            options:
              isConfirmedAutomatically: true
              onConfirmed: 
                type: action.go-back
              modal:
                title: ""  
children:
  # Image
  - type: component.image
    options:
      source:
        uri: =@ctx.jig.inputs.avatar
      height: 300
      resizeMode: center

  # Commenting
  - type: component.form
    instanceId: photoComment
    options:
      children:
        - type: component.text-field
          instanceId: comment
          options:
            label: Leave a comment!
            isMultiline: true
            textArea: dynamic
        - type: component.text-field
          instanceId: reactions
          options:
            label: ""
            value: "0"
            isHidden: true
            isRequired: false
        - type: component.text-field
          instanceId: photoId
          options:
            label: ""
            value: =@ctx.jig.inputs.photoId
            isHidden: true
            isRequired: false
        - type: component.text-field
          instanceId: commenter
          options:
            label: ""
            value: =@ctx.user.displayName
            isHidden: true
        - type: component.text-field
          instanceId: commenterEmail
          options:
            label: ""
            value: =@ctx.user.email
            isHidden: true
  # Comments & Reactions
  - type: component.list
    options:  
      data: =@ctx.datasources.commentData
      maximumItemsToRender: 8
      item: 
        type: component.list-item
        options:
          title: =(@ctx.current.item.firstName & ' ' & @ctx.current.item.lastName)
          subtitle: =@ctx.current.item.comment 
          leftElement: 
            element: avatar
            text: ''
            uri: =@ctx.current.item.avatar
          label:
            title: =(@ctx.current.item.reactions & ($number(@ctx.current.item.reactions) = 1 ? ' reaction' :' reactions'))
            color:
              - when: true
                color: color8
          # Swipe to like comment
          swipeable:
            left:
              - label: R E A C T
                icon: love-it
                color: primary
                onPress: 
                  type: action.execute-entity
                  options:
                    provider: DATA_PROVIDER_DYNAMIC
                    entity: default/testComment
                    method: update
                    goBack: stay
                    data:
                      id: =@ctx.current.item.testCommentID
                      reactions: =($number(@ctx.current.item.reactions) + $number(1))
                    onSuccess: 
                      type: action.sync-entities
                      options:
                        provider: DATA_PROVIDER_DYNAMIC
                        entities:
                          - entity: default/testComment