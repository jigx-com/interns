title: Upload Photo
description: Share photos and quotes 
type: jig.default
icon: camera

datasources:
  locationDropdown: 
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_DYNAMIC
      entities:
        - default/locations
      query: SELECT id, '$.name' FROM [default/locations] WHERE '$.name' LIKE '%'||@search||'%' OR @search IS NULL ORDER BY '$.name'
      queryParameters:
        search: =@ctx.components.location.state.searchText  

header: 
  type: component.image
  options:
    source:
      uri: https://images.unsplash.com/photo-1497942304796-b8bc2cc898f3?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1738&q=80

children:
  - type: component.form
    instanceId: sharePhotos
    options:
      isDiscardChangesAlertEnabled: false
      children:
        # Image Upload
        - type: component.media-field
          instanceId: uploadPhoto
          options:
            label: Upload a Photo
            mediaType: image
            isRequired: true
        # Title
        - type: component.text-field
          instanceId: title
          options:
            label: Photo Title
            isMultiline: false
            isRequired: true
        # Photo Description
        - type: component.text-field
          instanceId: description
          options:
            label: Description
            isRequired: false
        # Location of Image
        - type: component.dropdown
          instanceId: location
          options:
            label: Choose a Location
            data: =$filter(@ctx.datasources.locationDropdown, function($v){@ctx.datasources.locationDropdown ? $contains($string($v.name),$string(@ctx.components.dropdown-in.state.searchText != null ? @ctx.components.dropdown-in.state.searchText:'')) :true})[]
            item:
              type: component.dropdown-item
              options:
                title: =@ctx.current.item.name
                value: =@ctx.current.item.id
            isRequired: false
            isSearchable: true
        # 24 Hour Timer
        - type: component.text-field
          instanceId: expireDate
          options:
            label: ""
            value: =($millis() + 86400000) #cached data execution;moved to execute entities
            isRequired: false
            isHidden: true
        # Uploader details
        - type: component.text-field
          instanceId: uploadedBy
          options:
            label: ""
            value: =@ctx.user.displayName
            isHidden: true
            isRequired: false


actions:
  - children:
      - type: action.execute-entity
        options:
          title: Upload Photo
          provider: DATA_PROVIDER_DYNAMIC
          entity: default/photos
          method: create
          goBack: home
          onSuccess: 
            type: action.action-list
            options:
              actions:
                - type: action.confirm
                  options:
                    isConfirmedAutomatically: true
                    onConfirmed: 
                      type: action.go-back
                    modal:
                      title: ""
                - type: action.sync-entities
                  options:
                    provider: DATA_PROVIDER_DYNAMIC
                    force: true
                    entities:
                      - entity: default/photos
                - type: action.reset-state
                  options:
                    state: =@ctx.solution.state.photostories.
          data:
            uploadPhoto: =@ctx.components.uploadPhoto.state.value
            title: =@ctx.components.title.state.value
            description: =@ctx.components.description.state.value
            cruiseFilter: =@ctx.components.cruiseFilter.state.value
            location: =@ctx.components.location.state.value
            expireDate: =($millis() + 86400000)
            uploadedBy: =@ctx.components.uploadedBy.state.value



# actions:
#   - children:
#       - type: action.action-list
#         options:
#           title: Upload Photo
#           actions:
#             - type: action.execute-entity
#               options:
#                 provider: DATA_PROVIDER_DYNAMIC
#                 entity: default/photos
#                 method: create
#                 goBack: home
#                 onSuccess: 
#                   type: action.action-list
#                   options:
#                     actions:
#                       - type: action.confirm
#                         options:
#                           isConfirmedAutomatically: true
#                           onConfirmed: 
#                             type: action.go-back
#                           modal:
#                             title: ""
#                       - type: action.sync-entities
#                         options:
#                           provider: DATA_PROVIDER_DYNAMIC
#                           entities:
#                             - entity: default/photos
#                 data:
#                   uploadPhoto: =@ctx.components.uploadPhoto.state.value
#                   title: =@ctx.components.title.state.value
#                   description: =@ctx.components.description.state.value
#                   cruiseFilter: =@ctx.components.cruiseFilter.state.value
#                   location: =@ctx.components.location.state.value
#                   expireDate: =($millis() + 86400000)
#                   uploadedBy: =@ctx.components.uploadedBy.state.value
#             - type: action.confirm
#               options:
#                 isConfirmedAutomatically: true
#                 onConfirmed: 
#                   type: action.go-back
#                 modal:
#                   title: ""


  # - children:
  #     - type: action.submit-form
  #       options:
  #         formId: sharePhotos
  #         provider: DATA_PROVIDER_DYNAMIC
  #         entity: default/photos
  #         title: Upload Photo