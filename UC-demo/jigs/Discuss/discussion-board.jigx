title: Discussion Board
type: jig.default

header: 
  type: component.image
  options:
    source:
      uri: https://images.unsplash.com/photo-1517048676732-d65bc937f952?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80

datasources:
  mydata: 
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_DYNAMIC
  
      entities:
        - default/discussion
  
      query: |
        SELECT 
          id, 
          '$.class' AS class, 
          '$.initialQ' AS initialQ,
          '$.topic' AS topic,
          '$.userName' AS userName,
          '$.userAvatar' AS userAvatar,
          '$.days' AS days,
          '$.hasMeeting',
          '$.meetingId'
        FROM 
          [default/discussion] 
        WHERE 
          class = @sub
      queryParameters:
        sub: =@ctx.jig.inputs.sub
      isDocument: true

  responses:
    type: datasource.sqlite
    options:
      provider: DATA_PROVIDER_DYNAMIC
  
      entities:
        - default/testResponses
  
      query: |
        SELECT 
          id, 
          '$.respond' AS respond, 
          '$.reactions' AS reactions,
          '$.responder' AS responder,
          '$.avatar' AS avatar,
          '$.topic' AS topic
        FROM [default/testResponses] 
        WHERE 
          topic = @topic
      queryParameters:
        topic: =@ctx.jig.inputs.topic

children:
  - type: component.entity
    options:
      children:
        - type: component.entity-field
          options:
            label: Topic
            value: =@ctx.jig.inputs.topic
        - type: component.entity-field
          options:
            label: Question
            value: =@ctx.jig.inputs.iQ
            isMultiline: true
  
  
# Commenting
  - type: component.form
    instanceId: responses
    options:
      isDiscardChangesAlertEnabled: false
      children:
        - type: component.text-field
          instanceId: respond
          options:
            label: Respond to Question
            isMultiline: true
            textArea: dynamic
        - type: component.text-field
          instanceId: reactions
          options:
            label: ""
            value: "0"
            isHidden: true
            isRequired: false
        # - type: component.text-field
        #   instanceId: photoId
        #   options:
        #     label: ""
        #     value: =@ctx.jig.inputs.photoId
        #     isHidden: true
        #     isRequired: false
        - type: component.text-field
          instanceId: responder
          options:
            label: ""
            value: =@ctx.user.displayName
            isHidden: true
        - type: component.text-field
          instanceId: responderEmail
          options:
            label: ""
            value: =@ctx.user.email
            isHidden: true
        - type: component.text-field
          instanceId: topic
          options:
            label: ''
            value: =@ctx.jig.inputs.topic
            isHidden: true
            isRequired: true
        - type: component.text-field
          instanceId: avatar
          options:
            label: ' '
            value: =@ctx.jig.inputs.avatar
            isHidden: true
  # Comments & Reactions
  - type: component.list
    options:  
      data: =@ctx.datasources.responses
      maximumItemsToRender: 10
      item: 
        type: component.list-item
        options:
          title: =@ctx.current.item.responder
          description: =@ctx.current.item.respond
          leftElement: 
            element: avatar
            text: ''
            uri: =@ctx.current.item.avatar
          label: 
            title: =(@ctx.current.item.reactions & ($number(@ctx.current.item.reactions) = 1 ? ' reaction' :' reactions'))
            color:
              - when: true
                color: color8
          # Swipe to like comment
          swipeable:
            left:
              - label: R E A C T
                #should be clapping hands
                icon: love-it
                color: primary
                onPress: 
                  type: action.execute-entity
                  options:
                    provider: DATA_PROVIDER_DYNAMIC
                    entity: default/testResponses
                    method: update
                    goBack: stay
                    data:
                      id: =@ctx.current.item.id
                      reactions: =($number(@ctx.current.item.reactions) + $number(1))
                    onSuccess: 
                      type: action.sync-entities
                      options:
                        provider: DATA_PROVIDER_DYNAMIC
                        entities:
                          - entity: default/testResponses
  
actions:
  - children:
      #Submitting respons
      - type: action.action-list
        options:
          title: Comment
          actions:
            - type: action.execute-entity
              options:
                provider: DATA_PROVIDER_DYNAMIC
                entity: default/testResponses
                method: create
                goBack: stay
                data:
                  respond: =@ctx.jig.components.respond.state.value
                  reactions: "0"
                  responder: =@ctx.user.displayName
                  responderEmail: =@ctx.user.email
                  topic: =@ctx.jig.inputs.topic
                  avatar: =@ctx.jig.inputs.avatar
            - type: action.reset-state
              options:
                state: =@ctx.jig.components.respond.state.value

      - type: action.action-list
        options:
          style:
            isDisabled: "=@ctx.jig.inputs.hasMeeting = 'true' ? true : false"
          title: Comment and Start Meeting
          actions:
            - type: action.execute-entity
              options:
                provider: DATA_PROVIDER_DYNAMIC
                entity: default/testResponses
                method: create
                goBack: stay
                data:
                  respond: =@ctx.jig.components.respond.state.value
                  reactions: "0"
                  responder: =@ctx.user.displayName
                  responderEmail: =@ctx.user.email
                  topic: =@ctx.jig.inputs.topic
                  avatar: =@ctx.jig.inputs.avatar
            - type: action.execute-entity
              options:
                provider: DATA_PROVIDER_DYNAMIC
                entity: default/discussion
                method: update
                data: 
                  id: =@ctx.jig.inputs.discussionId
                  hasMeeting: "true"
                  meetingId: =$uuid_v4()
                onSuccess: 
                  type: action.start-meeting
                  options:
                    meetingId: =@ctx.datasources.mydata.meetingId
            - type: action.reset-state
              options:
                state: =@ctx.jig.components.respond.state.value
      - type: action.start-meeting
        options:
          style:
            isDisabled: "=@ctx.jig.inputs.hasMeeting = 'true' ? false : true"
          title: Join Existing Meeting
          meetingId: =@ctx.datasources.mydata.meetingId
      
                  
                  
            
              